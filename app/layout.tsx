import "./globals.css"
import type { Metadata, Viewport } from "next"
import localFont from "next/font/local"
import { RootLayoutContent } from "@/components/root-layout"
import { headers } from "next/headers"
import { cookieToInitialState } from "wagmi"
import { config } from "@/config"
import { Web3Providers } from "@/components/web3-providers"
import { BuildersProvider } from '@/context/builders-context';
import { cn } from "@/lib/utils";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
})

const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
})

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
}

export const viewport: Viewport = {
  themeColor: [
    { media: "(prefers-color-scheme: light)", color: "white" },
    { media: "(prefers-color-scheme: dark)", color: "black" },
  ],
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const initialState = cookieToInitialState(config, headers().get("cookie"))

  return (
    <html lang="en" suppressHydrationWarning>
      <body className={cn("min-h-screen bg-background font-sans antialiased", geistSans.variable, geistMono.variable)}>
        <BuildersProvider>
          <Web3Providers initialState={initialState}>
            <RootLayoutContent>{children}</RootLayoutContent>
          </Web3Providers>
        </BuildersProvider>
      </body>
    </html>
  );
}
