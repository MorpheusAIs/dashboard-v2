# GraphQL Queries for Active Stakers (Subgraph Version)

# Super fast query - get active stakers count (like your Dune query)
query GetActiveStakersCount {
  # Get the global count
  activeStakersCount(id: "global") {
    activeStakers
    lastUpdatedTimestamp
  }
  
  # Get breakdown by pool
  stethCount: activeStakersCount(id: "STETH") {
    activeStakers
  }
  
  linkCount: activeStakersCount(id: "LINK") {
    activeStakers
  }
}

# Alternative: Count directly from user stats (more real-time but slightly slower)
query GetActiveStakersCountDirect {
  userPoolStats(where: { isActiveStaker: true }) {
    id
    user
    poolType
    currentStakedAmount
  }
}

# Get detailed active stakers with amounts
query GetActiveStakersDetails {
  userPoolStats(
    where: { isActiveStaker: true }
    orderBy: currentStakedAmount
    orderDirection: desc
    first: 100
  ) {
    user
    poolType
    currentStakedAmount
    totalStakedAmount
    totalWithdrawnAmount
    stakeCount
    withdrawalCount
    firstStakeTimestamp
    lastStakeTimestamp
  }
}

# Get recent staking activity
query GetRecentStakingActivity($since: BigInt!) {
  userStakeEvents(
    where: { blockTimestamp_gte: $since }
    orderBy: blockTimestamp
    orderDirection: desc
    first: 50
  ) {
    user
    amount
    poolType
    blockTimestamp
    transactionHash
  }
}

# Example usage in your React hook:
# const { data } = useQuery(GET_ACTIVE_STAKERS_COUNT)
# const activeStakers = data?.activeStakersCount?.activeStakers || "0"
